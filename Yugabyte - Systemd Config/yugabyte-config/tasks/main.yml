- name: Ensure the Yugabyte directory exists
  file:
    path: "{{ yugabyte_base_path }}"
    state: directory
  become: true

- name: Set private IP address as a fact
  set_fact:
    private_ip: "{{ ansible_default_ipv4.address }}"

- name: Create master.conf file
  template:
    src: master.conf.j2
    dest: "{{ yugabyte_base_path }}/master.conf"
  become: true

- name: Create tserver.conf file
  template:
    src: tserver.conf.j2
    dest: "{{ yugabyte_base_path }}/tserver.conf"
  become: true

- name: Change ownership of Yugabyte directory
  file:
    path: "{{ yugabyte_base_path }}"
    owner: ubuntu
    group: ubuntu
    recurse: true

- name: Create systemd unit file for yb-master
  copy:
    dest: /etc/systemd/system/yb-master.service
    content: |
      [Unit]
      Description=Yugabyte Master Service
      After=network.target

      [Service]
      User=ubuntu
      ExecStart={{ yugabyte_base_path }}/bin/yb-master --flagfile {{ yugabyte_base_path }}/master.conf
      StandardOutput=file:/home/ubuntu/yugabyte-{{ yugabyte_version }}/disk1/yb-master.out
      StandardError=inherit
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target

- name: Create systemd unit file for yb-tserver
  copy:
    dest: /etc/systemd/system/yb-tserver.service
    content: |
      [Unit]
      Description=Yugabyte TServer Service
      After=network.target

      [Service]
      User=ubuntu
      ExecStart={{ yugabyte_base_path }}/bin/yb-tserver --flagfile {{ yugabyte_base_path }}/tserver.conf
      StandardOutput=file:/home/ubuntu/yugabyte-{{ yugabyte_version }}/disk1/yb-tserver.out
      StandardError=inherit
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd to apply new service files
  systemd:
    daemon_reload: true

- name: Enable and start yb-master service
  systemd:
    name: yb-master
    enabled: true
    state: started

- name: Enable and start yb-tserver service
  systemd:
    name: yb-tserver
    enabled: true
    state: started
